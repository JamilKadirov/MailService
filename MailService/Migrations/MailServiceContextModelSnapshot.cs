// <auto-generated />
using System;
using MailService.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MailService.Migrations
{
    [DbContext(typeof(MailServiceContext))]
    partial class MailServiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("MailService.Entities.Mail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Body")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FailedMessage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Subject")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Mails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Here's to be a CTA text or some random text",
                            CreatedAt = new DateTime(2023, 7, 2, 18, 35, 15, 924, DateTimeKind.Local).AddTicks(3330),
                            FailedMessage = "",
                            Result = "OK",
                            Subject = "The best subject ever"
                        },
                        new
                        {
                            Id = 2,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed quis nisl vitae nisi tincidunt pretium. Phasellus auctor, magna id consequat malesuada, leo augue mattis massa, quis aliquet sapien nisi quis nunc",
                            CreatedAt = new DateTime(2023, 7, 2, 18, 35, 15, 924, DateTimeKind.Local).AddTicks(3343),
                            FailedMessage = "",
                            Result = "Failed",
                            Subject = "Самый продающий текст"
                        });
                });

            modelBuilder.Entity("MailService.Entities.Recipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MailId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MailId");

                    b.ToTable("Recipient");
                });

            modelBuilder.Entity("MailService.Entities.Recipient", b =>
                {
                    b.HasOne("MailService.Entities.Mail", "Mail")
                        .WithMany("Recipients")
                        .HasForeignKey("MailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mail");
                });

            modelBuilder.Entity("MailService.Entities.Mail", b =>
                {
                    b.Navigation("Recipients");
                });
#pragma warning restore 612, 618
        }
    }
}
